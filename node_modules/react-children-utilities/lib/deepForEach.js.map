{"version":3,"file":"deepForEach.js","sourceRoot":"","sources":["../src/lib/deepForEach.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,MAAM,OAAO,CAAC;AACjD,OAAO,kBAAkB,MAAM,yBAAyB,CAAC;AAEzD,MAAM,WAAW,GAAG,CAClB,QAAiC,EACjC,aAAyD,EACnD,EAAE;IACR,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,KAAgB,EAAE,KAAa,EAAE,EAAE;QAC7D,IAAI,cAAc,CAAC,KAAK,CAAC,IAAI,kBAAkB,CAAC,KAAK,CAAC,EAAE;YACtD,0CAA0C;YAC1C,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;SAClD;QACD,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,eAAe,WAAW,CAAC","sourcesContent":["import type { ReactNode } from 'react';\nimport { Children, isValidElement } from 'react';\nimport hasComplexChildren from './hasComplexChildren.js';\n\nconst deepForEach = (\n  children: ReactNode | ReactNode[],\n  deepForEachFn: (child: ReactNode, index?: number) => void,\n): void => {\n  Children.forEach(children, (child: ReactNode, index: number) => {\n    if (isValidElement(child) && hasComplexChildren(child)) {\n      // Each inside the child that has children\n      deepForEach(child.props.children, deepForEachFn);\n    }\n    deepForEachFn(child, index);\n  });\n};\n\nexport default deepForEach;\n"]}